import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Collector;

class Solution {
    public String frequencySort(String s) {
        
        String result="";
        HashMap<Character,Integer> map=new HashMap<Character,Integer>();
        
        char[] arr=s.toCharArray();
        for(Character c: arr) {
        	if(map.containsKey(c)) {
        		//map.get(c).intValue()++;//=map.get(c)+1;
        		map.put(c,map.get(c)+1);
        		
        	}
        	else
        	{
        		map.put(c,1);
        	}
        	
        }
        //decreasing order by values;
        
        
        Map<Character,Integer> sorted =
        map.entrySet().stream()
                .sorted(Map.Entry.<Character, Integer>comparingByValue().reversed())
                .collect(Collectors.toMap(Map.Entry::getKey,
                                          Map.Entry::getValue, (e1, e2) -> e1, LinkedHashMap::new));
        
        for(Character c : sorted.keySet())
        {
        	for(int i=0;i<sorted.get(c);i++)
        		
        	result+=c;
        }
        return result;
    
        
    }
}
