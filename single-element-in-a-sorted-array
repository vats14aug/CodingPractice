package testpractise;

import java.util.HashMap;
import java.util.Map;
import java.util.stream.IntStream;

class SingleElement {
	
	private static int[] nums= {1,1,2,3,3,4,4,8,8};

	public static void main(String[] args) 
	{
		System.out.println(singleNonDuplicateWithoutCollections(nums));
	}
	
    private static int singleNonDuplicateWithoutCollections(int[] nums) {
		int arr[] = new int[100];
    	for(int i=0;i<nums.length;i++)
		{
			arr[nums[i]]++;
		}
    	
    	return IntStream.range(0, arr.length)
				.filter(i -> 1 == arr[i])
				.findFirst()
				.orElse(-1);	// return -1 if target is not found
    	
	}

	public static int singleNonDuplicateCollections(int[] nums) {
    	
    
		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();

		for (int i = 0; i < nums.length; i++) 
		{
			// java 8 features
			map.computeIfPresent(nums[i], (key, val) -> val + 1);
			map.putIfAbsent(nums[i], 1);
		}
		/*
		 * { 
		 * if(map.containsKey(nums[i])) map.put(nums[i],map.get(nums[i])+1); 
		 * else map.put(nums[i],1); 
		 * }
		 */
        
        return map.entrySet()
				   .stream()
				   .filter(entry -> 1==(entry.getValue()))
				   .map(Map.Entry::getKey)
				   .findFirst().get();
    }
    
}
